// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from auth.djinni

#include "native_push.hpp"  // my header
#include "Marshal.hpp"
#include "native_push_listener.hpp"

namespace djinni_generated {

native_push::native_push() : ::djinni::JniInterface<::act::Push, native_push>("me/ppxpp/account/auth/Push$CppProxy") {}

native_push::~native_push() = default;


CJNIEXPORT void JNICALL Java_me_ppxpp_account_auth_Push_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        delete reinterpret_cast<::djinni::CppProxyHandle<::act::Push>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jobject JNICALL Java_me_ppxpp_account_auth_Push_00024CppProxy_create(JNIEnv* jniEnv, jobject /*this*/, jstring j_host, jstring j_device, jobject j_listener)
{
    try {
        DJINNI_FUNCTION_PROLOGUE0(jniEnv);
        auto r = ::act::Push::create(::djinni::String::toCpp(jniEnv, j_host),
                                     ::djinni::String::toCpp(jniEnv, j_device),
                                     ::djinni_generated::native_push_listener::toCpp(jniEnv, j_listener));
        return ::djinni::release(::djinni_generated::native_push::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT void JNICALL Java_me_ppxpp_account_auth_Push_00024CppProxy_native_1connect(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::act::Push>(nativeRef);
        ref->connect();
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

}  // namespace djinni_generated
