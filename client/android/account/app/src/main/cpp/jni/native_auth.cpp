// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from auth.djinni

#include "native_auth.hpp"  // my header
#include "Marshal.hpp"
#include "native_auth_info.hpp"
#include "native_auth_reply.hpp"
#include "native_user_info.hpp"

namespace djinni_generated {

native_auth::native_auth() : ::djinni::JniInterface<::act::Auth, native_auth>("me/ppxpp/account/auth/Auth$CppProxy") {}

native_auth::~native_auth() = default;


CJNIEXPORT void JNICALL Java_me_ppxpp_account_auth_Auth_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        delete reinterpret_cast<::djinni::CppProxyHandle<::act::Auth>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jobject JNICALL Java_me_ppxpp_account_auth_Auth_00024CppProxy_create(JNIEnv* jniEnv, jobject /*this*/)
{
    try {
        DJINNI_FUNCTION_PROLOGUE0(jniEnv);
        auto r = ::act::Auth::create();
        return ::djinni::release(::djinni_generated::native_auth::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_me_ppxpp_account_auth_Auth_00024CppProxy_native_1signUp(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jobject j_user)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::act::Auth>(nativeRef);
        auto r = ref->sign_up(::djinni_generated::native_user_info::toCpp(jniEnv, j_user));
        return ::djinni::release(::djinni_generated::native_auth_reply::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_me_ppxpp_account_auth_Auth_00024CppProxy_native_1signIn(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jobject j_user)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::act::Auth>(nativeRef);
        auto r = ref->sign_in(::djinni_generated::native_user_info::toCpp(jniEnv, j_user));
        return ::djinni::release(::djinni_generated::native_auth_reply::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_me_ppxpp_account_auth_Auth_00024CppProxy_native_1signOut(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jobject j_auth)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::act::Auth>(nativeRef);
        auto r = ref->sign_out(::djinni_generated::native_auth_info::toCpp(jniEnv, j_auth));
        return ::djinni::release(::djinni_generated::native_auth_reply::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jint JNICALL Java_me_ppxpp_account_auth_Auth_00024CppProxy_native_1update(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jobject j_user)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::act::Auth>(nativeRef);
        auto r = ref->update(::djinni_generated::native_user_info::toCpp(jniEnv, j_user));
        return ::djinni::release(::djinni::I32::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

}  // namespace djinni_generated
